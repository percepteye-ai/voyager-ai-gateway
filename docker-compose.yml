services:
  voyager_ai_gw:
    image: voyager_ai_gw:latest
    build:
      context: .
      args:
        target: runtime
    volumes:
      - ./config.yaml:/app/config.yaml
    command:
      - "--config=/app/config.yaml"
    environment:
      DATABASE_URL: "postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/voyager_ai_gw"
      STORE_MODEL_IN_DB: "True"
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - app_net
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --no-verbose --tries=1 http://localhost:4000/health/liveliness || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:16
    restart: always
    container_name: voyager_ai_gw_db
    environment:
      POSTGRES_DB: voyager_ai_gw
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d voyager_ai_gw -U ${DB_USER}"]
      interval: 1s
      timeout: 5s
      retries: 10

  nginx_proxy:
    image: nginx:latest
    container_name: nginx_proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - voyager_ai_gw
    networks:
      - app_net

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint: >
      sh -c "trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot; sleep 12h & wait $${!}; done"

volumes:
  postgres_data:
    name: voyager_ai_gw_postgres_data

networks:
  app_net:
    driver: bridge
